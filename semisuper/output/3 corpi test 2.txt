/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/bin/python3.6 /Users/emperor/HU/BA/semisuper/semisuper/tests/test_corpi.py
---------------------------
---------------------------
SMS SPAM CORPUS
---------------------------
---------------------------

Parameters for training data:
 60.0 % of positive documents are hidden in unlabelled set U.
 5.0 % of P is actually negative, to simulate noise.

P: 1737 , U: 2720


---------------------------
Training dummy classifier
---------------------------



---------------------------
Training one-class SVM
---------------------------

Building for evaluation
*
optimization finished, #iter = 13
obj = 377128.465657, rho = 868.459541
nSV = 869, nBSV = 868
[LibSVM]

---------------------------
Training cos-roc classifier
---------------------------

Computing ranking (cosine similarity to mean positive example)
Choosing Potential Negative examples with ranking threshold
Threshold given noise level: 0.0725613286915
Unlabelled docs below threshold: 421 of 2720 

Building Rocchio model
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
             precision    recall  f1-score   support

        0.0       0.80      0.17      0.29      2720
        1.0       0.42      0.93      0.58      1737

avg / total       0.65      0.47      0.40      4457



---------------------------
Training roc-SVM classifier
---------------------------

Determining RN using Cosine Similarity threshold and Rocchio

Building Rocchio model to determine Reliable Negative examples
Reliable Negative examples in U: 2498 ( 91.83823529411765 %)

Iterating SVM with P, U-RN, and RN
Building initial SVM classifier with Positive and Reliable Negative docs
Predicting U with initial SVM, adding negatively classified docs to RN for iteration
new negative docs: 1
Iteration # 1
Iterative SVM converged. Positive examples remaining in U: 221 ( 99.54954954954955 %)
Ratio of positive samples classified as negative by initial SVM: 0.0414507772021
Ratio of positive samples classified as negative by final SVM: 0.0414507772021
Returning final classifier
Classification Report:

[1 1 1 1 1 1 1 1 1 1] [0 0 0 0 0 0 0 0 0 0]
             precision    recall  f1-score   support

        0.0       0.97      0.91      0.94      2720
        1.0       0.87      0.96      0.91      1737

avg / total       0.93      0.93      0.93      4457



---------------------------
Training CR_SVM classifier
---------------------------

Determining RN using Cosine Similarity threshold and Rocchio

Computing ranking (cosine similarity to mean positive example)
Choosing Potential Negative examples with ranking threshold
Threshold given noise level: 0.0433228416526
Unlabelled docs below threshold: 122 of 2720 

Building Rocchio model to determine Reliable Negative examples
Reliable Negative examples in U: 142 ( 5.220588235294118 %)

Iterating SVM with P, U-RN, and RN
Building initial SVM classifier with Positive and Reliable Negative docs
Predicting U with initial SVM, adding negatively classified docs to RN for iteration
new negative docs: 3
Iteration # 1
new negative docs: 1
Iteration # 2
Iterative SVM converged. Positive examples remaining in U: 2574 ( 99.84484096198604 %)
Ratio of positive samples classified as negative by initial SVM: 0.0132412204951
Ratio of positive samples classified as negative by final SVM: 0.0132412204951
Returning final classifier
Classification Report:

[1 1 1 1 1 1 1 1 1 1] [1 1 1 1 1 1 1 1 1 1]
             precision    recall  f1-score   support

        0.0       0.86      0.05      0.10      2720
        1.0       0.40      0.99      0.57      1737

avg / total       0.68      0.42      0.28      4457



---------------------------
Training I-EM classifier
---------------------------

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.40004606  0.59995394]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 85.0 / 2605 ( 3.26295585413 %)

Iteration # 2
Building new model using probabilistic labels
Class distribution: [ 0.42463982  0.57536018]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 137.0 / 2605 ( 5.25911708253 %)

Iteration # 3
Building new model using probabilistic labels
Class distribution: [ 0.43446325  0.56553675]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 158.0 / 2605 ( 6.06525911708 %)

Iteration # 4
Building new model using probabilistic labels
Class distribution: [ 0.44079874  0.55920126]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 170.0 / 2605 ( 6.52591170825 %)

Iteration # 5
Building new model using probabilistic labels
Class distribution: [ 0.44382024  0.55617976]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 189.0 / 2605 ( 7.25527831094 %)

Iteration # 6
Building new model using probabilistic labels
Class distribution: [ 0.44648902  0.55351098]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 193.0 / 2605 ( 7.40882917466 %)

Iteration # 7
Building new model using probabilistic labels
Class distribution: [ 0.44861068  0.55138932]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 203.0 / 2605 ( 7.79270633397 %)

Iteration # 8
Building new model using probabilistic labels
Class distribution: [ 0.45016149  0.54983851]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 209.0 / 2605 ( 8.02303262956 %)

Iteration # 9
Building new model using probabilistic labels
Class distribution: [ 0.4515662  0.5484338]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 212.0 / 2605 ( 8.13819577735 %)

Iteration # 10
Building new model using probabilistic labels
Class distribution: [ 0.45237396  0.54762604]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 216.0 / 2605 ( 8.29174664107 %)

Iteration # 11
Building new model using probabilistic labels
Class distribution: [ 0.45314664  0.54685336]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 218.0 / 2605 ( 8.36852207294 %)

Iteration # 12
Building new model using probabilistic labels
Class distribution: [ 0.45338771  0.54661229]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 219.0 / 2605 ( 8.40690978887 %)

Iteration # 13
Building new model using probabilistic labels
Class distribution: [ 0.45351948  0.54648052]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 220.0 / 2605 ( 8.4452975048 %)

Iteration # 14
Building new model using probabilistic labels
Class distribution: [ 0.45369823  0.54630177]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 221.0 / 2605 ( 8.48368522073 %)

Iteration # 15
Building new model using probabilistic labels
Class distribution: [ 0.45393785  0.54606215]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 221.0 / 2605 ( 8.48368522073 %)

Iteration # 16
Building new model using probabilistic labels
Class distribution: [ 0.45409473  0.54590527]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 221.0 / 2605 ( 8.48368522073 %)

Iteration # 17
Building new model using probabilistic labels
Class distribution: [ 0.45416912  0.54583088]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 221.0 / 2605 ( 8.48368522073 %)

Iteration # 18
Building new model using probabilistic labels
Class distribution: [ 0.45427189  0.54572811]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 222.0 / 2605 ( 8.52207293666 %)

Iteration # 19
Building new model using probabilistic labels
Class distribution: [ 0.45445029  0.54554971]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 223.0 / 2605 ( 8.56046065259 %)

Iteration # 20
Building new model using probabilistic labels
Class distribution: [ 0.45459203  0.54540797]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 225.0 / 2605 ( 8.63723608445 %)

Iteration # 21
Building new model using probabilistic labels
Class distribution: [ 0.45488998  0.54511002]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 225.0 / 2605 ( 8.63723608445 %)

Iteration # 22
Building new model using probabilistic labels
Class distribution: [ 0.45508911  0.54491089]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 226.0 / 2605 ( 8.67562380038 %)

Iteration # 23
Building new model using probabilistic labels
Class distribution: [ 0.455159  0.544841]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 226.0 / 2605 ( 8.67562380038 %)

Iteration # 24
Building new model using probabilistic labels
Class distribution: [ 0.45522473  0.54477527]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 226.0 / 2605 ( 8.67562380038 %)

Iteration # 25
Building new model using probabilistic labels
Class distribution: [ 0.45525894  0.54474106]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 226.0 / 2605 ( 8.67562380038 %)

Iteration # 26
Building new model using probabilistic labels
Class distribution: [ 0.4552842  0.5447158]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 226.0 / 2605 ( 8.67562380038 %)

Iteration # 27
Building new model using probabilistic labels
Class distribution: [ 0.45532081  0.54467919]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 227.0 / 2605 ( 8.71401151631 %)

Iteration # 28
Building new model using probabilistic labels
Class distribution: [ 0.45538601  0.54461399]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 227.0 / 2605 ( 8.71401151631 %)

Iteration # 29
Building new model using probabilistic labels
Class distribution: [ 0.45549432  0.54450568]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 229.0 / 2605 ( 8.79078694818 %)

Iteration # 30
Building new model using probabilistic labels
Class distribution: [ 0.45566386  0.54433614]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 229.0 / 2605 ( 8.79078694818 %)

Iteration # 31
Building new model using probabilistic labels
Class distribution: [ 0.45580513  0.54419487]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 229.0 / 2605 ( 8.79078694818 %)

Iteration # 32
Building new model using probabilistic labels
Class distribution: [ 0.4558565  0.5441435]
Computing attribute probabilities for 89611 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 229.0 / 2605 ( 8.79078694818 %)

Returning final model after 32 iterations
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 0.  0.  0.  0.  1.  1.  0.  0.  0.  0.]
             precision    recall  f1-score   support

        0.0       0.97      0.91      0.94      2605
        1.0       0.88      0.95      0.91      1737

avg / total       0.93      0.93      0.93      4342



---------------------------
Training S-EM classifier
---------------------------

Determining confidence threshold using Spy Documents and rough I-EM

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.35090868  0.64909132]
Computing attribute probabilities for 91493 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 81.0 / 2893 ( 2.79986173522 %)

Iteration # 2
Building new model using probabilistic labels
Class distribution: [ 0.37421592  0.62578408]
Computing attribute probabilities for 91493 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 120.0 / 2893 ( 4.14794331144 %)

Iteration # 3
Building new model using probabilistic labels
Class distribution: [ 0.38234117  0.61765883]
Computing attribute probabilities for 91493 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 139.0 / 2893 ( 4.80470100242 %)

Iteration # 4
Building new model using probabilistic labels
Class distribution: [ 0.38779605  0.61220395]
Computing attribute probabilities for 91493 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 162.0 / 2893 ( 5.59972347045 %)

Iteration # 5
Building new model using probabilistic labels
Class distribution: [ 0.3916361  0.6083639]
Computing attribute probabilities for 91493 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 179.0 / 2893 ( 6.1873487729 %)

Iteration # 6
Building new model using probabilistic labels
Class distribution: [ 0.39447058  0.60552942]
Computing attribute probabilities for 91493 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 191.0 / 2893 ( 6.60214310404 %)

Iteration # 7
Building new model using probabilistic labels
Class distribution: [ 0.39640014  0.60359986]
Computing attribute probabilities for 91493 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 193.0 / 2893 ( 6.67127549257 %)

Iteration # 8
Building new model using probabilistic labels
Class distribution: [ 0.39766113  0.60233887]
Computing attribute probabilities for 91493 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 200.0 / 2893 ( 6.9132388524 %)

Iteration # 9
Building new model using probabilistic labels
Class distribution: [ 0.39870432  0.60129568]
Computing attribute probabilities for 91493 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 204.0 / 2893 ( 7.05150362945 %)

Returning final model after 9 iterations
Threshold given noise level: 8.00349258515e-20
Unlabelled docs below threshold: 163 of 2720 


Iterating I-EM with P, U-RN, and RN

Building classifier from Positive and Reliable Negative set
Class distribution: [ 0.5995086  0.4004914]
Computing attribute probabilities for 15319 attributes

Calculating initial probabilistic labels for Reliable Negative and Unlabelled set

Iterating EM algorithm on P, RN and U

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.80296727  0.19703273]
Computing attribute probabilities for 91493 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 1969.0 / 2720 ( 72.3897058824 %)

Acceptable ratio of positively labelled sentences in U is reached.
Returning final model after 1 iterations
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 1.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
             precision    recall  f1-score   support

        0.0       0.91      0.28      0.42      2720
        1.0       0.46      0.96      0.62      1737

avg / total       0.73      0.54      0.50      4457



---------------------------
Training Biased-SVM
---------------------------

There are 88 parameter combinations to be evaluated.
NON-NORMALIZED WEIGHTS

(0, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 1})
(0.99816122648068761, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1})
(0.99816122648068761, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1})
(0.99816122648068761, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1})
(0.99816122648068761, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 1})
(0.99816122648068761, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.99816122648068761, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.99816122648068761, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.99816122648068761, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.99816122648068761, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.99816122648068761, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 10})
(0.28371230667166875, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 10})
(0.42122356571734437, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 10})
(0.42122356571734437, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 10})
(0.42122356571734437, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 10})
(0.42122356571734437, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 10})
(0.42122356571734437, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.42122356571734437, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.42122356571734437, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.42122356571734437, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.42122356571734437, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.42122356571734437, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.16199191947258187, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 100})
(0.48585993902472424, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 100})
(0.48585993902472424, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.48585993902472424, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.48585993902472424, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.48585993902472424, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 100})
(0.48585993902472424, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 100})
(0.48585993902472424, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 100})
(0.48585993902472424, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.48585993902472424, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.48585993902472424, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.27996940025119815, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 100})
(0.41255857872280904, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 100})
(0.41255857872280904, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 100})
(0.41255857872280904, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 100})
(0.41255857872280904, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 100})
(0.41255857872280904, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.41255857872280904, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.41255857872280904, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.41255857872280904, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.41255857872280904, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.41255857872280904, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.26616371911271736, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 1000})
(0.4173726579039741, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 1000})
(0.4173726579039741, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.4173726579039741, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.4173726579039741, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.4173726579039741, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 1000})
(0.4173726579039741, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 1000})
(0.4173726579039741, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 1000})
(0.4173726579039741, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.4173726579039741, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.4173726579039741, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.28454223495400227, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.41966620271794075, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.41966620271794075, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.41966620271794075, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.41966620271794075, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.41966620271794075, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.41966620271794075, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.41966620271794075, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.41966620271794075, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.41966620271794075, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.41966620271794075, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})

Best model has parameters {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1} and PU-score 0.998161226481
Building final classifier


-----------------------------------------------------------------------------
EVALUATION ON VALIDATION SET
-----------------------------------------------------------------------------

---------------------------
Dummy:
             precision    recall  f1-score   support

          0       0.14      0.72      0.24       150
          1       0.88      0.32      0.47       966

avg / total       0.78      0.37      0.44      1116

---------------------------
One-Class SVM:
             precision    recall  f1-score   support

         -1       0.25      0.65      0.36       150
          1       0.93      0.70      0.80       966

avg / total       0.84      0.70      0.74      1116

---------------------------
Cos-Roc:
             precision    recall  f1-score   support

          0       0.00      0.00      0.00       150
          1       0.85      0.89      0.87       966

avg / total       0.74      0.77      0.75      1116

---------------------------
Roc-SVM:
             precision    recall  f1-score   support

          0       0.17      0.75      0.28       150
          1       0.92      0.43      0.59       966

avg / total       0.82      0.47      0.55      1116

---------------------------
CR-SVM:
             precision    recall  f1-score   support

          0       0.00      0.00      0.00       150
          1       0.86      0.97      0.91       966

avg / total       0.75      0.84      0.79      1116

---------------------------
I-EM:
             precision    recall  f1-score   support

          0       0.15      0.74      0.24       150
          1       0.89      0.33      0.48       966

avg / total       0.79      0.38      0.44      1116

---------------------------
S-EM:
             precision    recall  f1-score   support

          0       0.71      0.42      0.53       150
          1       0.92      0.97      0.94       966

avg / total       0.89      0.90      0.89      1116

---------------------------
Biased-SVM:
             precision    recall  f1-score   support

          0       0.36      0.07      0.11       150
          1       0.87      0.98      0.92       966

avg / total       0.80      0.86      0.81      1116

---------------------------
---------------------------
AMAZON CORPUS
---------------------------
---------------------------

Parameters for training data:
 60.0 % of positive documents are hidden in unlabelled set U.
 5.0 % of P is actually negative, to simulate noise.

P: 179 , U: 619


---------------------------
Training dummy classifier
---------------------------



---------------------------
Training one-class SVM
---------------------------

Building for evaluation
*
optimization finished, #iter = 26
obj = 4002.599306, rho = 89.444198
nSV = 98, nBSV = 81
[LibSVM]

---------------------------
Training cos-roc classifier
---------------------------

Computing ranking (cosine similarity to mean positive example)
Choosing Potential Negative examples with ranking threshold
Threshold given noise level: 0.126506183166
Unlabelled docs below threshold: 215 of 619 

Building Rocchio model
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 1.  1.  0.  0.  1.  1.  1.  0.  0.  1.]
             precision    recall  f1-score   support

        0.0       0.98      0.39      0.56       619
        1.0       0.31      0.97      0.47       179

avg / total       0.83      0.52      0.54       798



---------------------------
Training roc-SVM classifier
---------------------------

Determining RN using Cosine Similarity threshold and Rocchio

Building Rocchio model to determine Reliable Negative examples
Reliable Negative examples in U: 568 ( 91.76090468497577 %)

Iterating SVM with P, U-RN, and RN
Building initial SVM classifier with Positive and Reliable Negative docs
Predicting U with initial SVM, adding negatively classified docs to RN for iteration
Iterative SVM converged. Positive examples remaining in U: 51 ( 100.0 %)
Ratio of positive samples classified as negative by initial SVM: 0.0
Classification Report:

[1 1 1 1 1 1 1 1 1 1] [0 0 0 0 0 0 0 0 0 0]
             precision    recall  f1-score   support

        0.0       1.00      0.91      0.95       619
        1.0       0.77      1.00      0.87       179

avg / total       0.95      0.93      0.94       798



---------------------------
Training CR_SVM classifier
---------------------------

Determining RN using Cosine Similarity threshold and Rocchio

Computing ranking (cosine similarity to mean positive example)
Choosing Potential Negative examples with ranking threshold
Threshold given noise level: 0.0775847350694
Unlabelled docs below threshold: 105 of 619 

Building Rocchio model to determine Reliable Negative examples
Reliable Negative examples in U: 148 ( 23.909531502423263 %)

Iterating SVM with P, U-RN, and RN
Building initial SVM classifier with Positive and Reliable Negative docs
Predicting U with initial SVM, adding negatively classified docs to RN for iteration
new negative docs: 31
Iteration # 1
new negative docs: 17
Iteration # 2
new negative docs: 13
Iteration # 3
new negative docs: 10
Iteration # 4
new negative docs: 7
Iteration # 5
new negative docs: 9
Iteration # 6
new negative docs: 11
Iteration # 7
new negative docs: 15
Iteration # 8
new negative docs: 19
Iteration # 9
new negative docs: 22
Iteration # 10
new negative docs: 12
Iteration # 11
new negative docs: 15
Iteration # 12
new negative docs: 10
Iteration # 13
new negative docs: 12
Iteration # 14
new negative docs: 11
Iteration # 15
new negative docs: 7
Iteration # 16
new negative docs: 5
Iteration # 17
new negative docs: 5
Iteration # 18
new negative docs: 1
Iteration # 19
new negative docs: 1
Iteration # 20
new negative docs: 2
Iteration # 21
new negative docs: 3
Iteration # 22
new negative docs: 1
Iteration # 23
new negative docs: 1
Iteration # 24
Iterative SVM converged. Positive examples remaining in U: 231 ( 49.044585987261144 %)
Ratio of positive samples classified as negative by initial SVM: 0.0335195530726
Ratio of positive samples classified as negative by final SVM: 0.0
Returning final classifier
Classification Report:

[1 1 1 1 1 1 1 1 1 1] [0 1 0 0 1 0 0 0 0 0]
             precision    recall  f1-score   support

        0.0       1.00      0.63      0.77       619
        1.0       0.44      1.00      0.61       179

avg / total       0.87      0.71      0.73       798



---------------------------
Training I-EM classifier
---------------------------

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.40044743  0.59955257]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 6.0 / 268 ( 2.23880597015 %)

Iteration # 2
Building new model using probabilistic labels
Class distribution: [ 0.42839265  0.57160735]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 21.0 / 268 ( 7.83582089552 %)

Iteration # 3
Building new model using probabilistic labels
Class distribution: [ 0.45449761  0.54550239]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 27.0 / 268 ( 10.0746268657 %)

Iteration # 4
Building new model using probabilistic labels
Class distribution: [ 0.46604857  0.53395143]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 32.0 / 268 ( 11.9402985075 %)

Iteration # 5
Building new model using probabilistic labels
Class distribution: [ 0.47365488  0.52634512]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 36.0 / 268 ( 13.4328358209 %)

Iteration # 6
Building new model using probabilistic labels
Class distribution: [ 0.47921878  0.52078122]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 37.0 / 268 ( 13.8059701493 %)

Iteration # 7
Building new model using probabilistic labels
Class distribution: [ 0.48354639  0.51645361]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 38.0 / 268 ( 14.1791044776 %)

Iteration # 8
Building new model using probabilistic labels
Class distribution: [ 0.48719303  0.51280697]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 39.0 / 268 ( 14.552238806 %)

Iteration # 9
Building new model using probabilistic labels
Class distribution: [ 0.48943727  0.51056273]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 39.0 / 268 ( 14.552238806 %)

Iteration # 10
Building new model using probabilistic labels
Class distribution: [ 0.49102154  0.50897846]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 39.0 / 268 ( 14.552238806 %)

Iteration # 11
Building new model using probabilistic labels
Class distribution: [ 0.49244931  0.50755069]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 43.0 / 268 ( 16.0447761194 %)

Iteration # 12
Building new model using probabilistic labels
Class distribution: [ 0.4952594  0.5047406]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 43.0 / 268 ( 16.0447761194 %)

Iteration # 13
Building new model using probabilistic labels
Class distribution: [ 0.49708819  0.50291181]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 43.0 / 268 ( 16.0447761194 %)

Iteration # 14
Building new model using probabilistic labels
Class distribution: [ 0.49786386  0.50213614]
Computing attribute probabilities for 8020 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 43.0 / 268 ( 16.0447761194 %)

Returning final model after 14 iterations
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 0.  0.  0.  0.  0.  0.  0.  0.  1.  0.]
             precision    recall  f1-score   support

        0.0       1.00      0.84      0.91       268
        1.0       0.81      1.00      0.89       179

avg / total       0.92      0.90      0.90       447



---------------------------
Training S-EM classifier
---------------------------

Determining confidence threshold using Spy Documents and rough I-EM

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.20300752  0.79699248]
Computing attribute probabilities for 13022 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 0.0 / 636 ( 0.0 %)

Returning final model after 1 iterations
Threshold given noise level: 7.17724969676e-09
Unlabelled docs below threshold: 118 of 619 


Iterating I-EM with P, U-RN, and RN

Building classifier from Positive and Reliable Negative set
Class distribution: [ 0.6  0.4]
Computing attribute probabilities for 7568 attributes

Calculating initial probabilistic labels for Reliable Negative and Unlabelled set

Iterating EM algorithm on P, RN and U

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.59391393  0.40608607]
Computing attribute probabilities for 13022 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 319.0 / 619 ( 51.534733441 %)

Acceptable ratio of positively labelled sentences in U is reached.
Returning final model after 1 iterations
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 0.  1.  0.  0.  1.  0.  1.  0.  0.  0.]
             precision    recall  f1-score   support

        0.0       1.00      0.48      0.65       619
        1.0       0.36      0.99      0.53       179

avg / total       0.85      0.60      0.62       798



---------------------------
Training Biased-SVM
---------------------------

There are 88 parameter combinations to be evaluated.
NON-NORMALIZED WEIGHTS

(0, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 1})
(0.50626854244425301, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1})
(0.50626854244425301, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1})
(0.50626854244425301, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1})
(0.50626854244425301, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 1})
(0.50626854244425301, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.50626854244425301, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.50626854244425301, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.50626854244425301, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.50626854244425301, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.50626854244425301, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 10})
(0.25720164609053492, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 10})
(0.25720164609053492, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 10})
(0.25720164609053492, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 10})
(0.25720164609053492, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 10})
(0.25720164609053492, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 10})
(0.25720164609053492, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.25720164609053492, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.25720164609053492, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.25720164609053492, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.25720164609053492, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.25720164609053492, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.10973936899862824, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 100})
(0.48732943469785583, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 100})
(0.48732943469785583, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.48732943469785583, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.48732943469785583, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.48732943469785583, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 100})
(0.48732943469785583, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 100})
(0.48732943469785583, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 100})
(0.48732943469785583, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.48732943469785583, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.48732943469785583, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.25720164609053492, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 100})
(0.25720164609053492, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 100})
(0.25720164609053492, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 100})
(0.25720164609053492, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 100})
(0.25720164609053492, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 100})
(0.25720164609053492, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.25720164609053492, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.25720164609053492, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.25720164609053492, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.25720164609053492, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.25720164609053492, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.25720164609053492, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 1000})
(0.25720164609053492, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 1000})
(0.25720164609053492, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.25720164609053492, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.25720164609053492, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.25720164609053492, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 1000})
(0.25720164609053492, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 1000})
(0.25720164609053492, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 1000})
(0.25720164609053492, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.25720164609053492, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.25720164609053492, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.25720164609053492, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.25720164609053492, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.25720164609053492, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.25720164609053492, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.25720164609053492, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.25720164609053492, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.25720164609053492, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.25720164609053492, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.25720164609053492, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.25720164609053492, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.25720164609053492, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})

Best model has parameters {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1} and PU-score 0.506268542444
Building final classifier


-----------------------------------------------------------------------------
EVALUATION ON VALIDATION SET
-----------------------------------------------------------------------------

---------------------------
Dummy:
             precision    recall  f1-score   support

          0       0.54      0.97      0.70       100
          1       0.86      0.18      0.30       100

avg / total       0.70      0.57      0.50       200

---------------------------
One-Class SVM:
             precision    recall  f1-score   support

         -1       0.53      0.31      0.39       100
          1       0.51      0.73      0.60       100

avg / total       0.52      0.52      0.50       200

---------------------------
Cos-Roc:
             precision    recall  f1-score   support

          0       0.77      0.36      0.49       100
          1       0.58      0.89      0.70       100

avg / total       0.67      0.62      0.60       200

---------------------------
Roc-SVM:
             precision    recall  f1-score   support

          0       0.62      0.97      0.75       100
          1       0.93      0.40      0.56       100

avg / total       0.77      0.69      0.66       200

---------------------------
CR-SVM:
             precision    recall  f1-score   support

          0       0.67      0.72      0.69       100
          1       0.70      0.64      0.67       100

avg / total       0.68      0.68      0.68       200

---------------------------
I-EM:
             precision    recall  f1-score   support

          0       0.70      0.80      0.74       100
          1       0.76      0.65      0.70       100

avg / total       0.73      0.72      0.72       200

---------------------------
S-EM:
             precision    recall  f1-score   support

          0       0.80      0.65      0.72       100
          1       0.71      0.84      0.77       100

avg / total       0.75      0.74      0.74       200

---------------------------
Biased-SVM:
             precision    recall  f1-score   support

          0       0.70      0.86      0.77       100
          1       0.82      0.64      0.72       100

avg / total       0.76      0.75      0.75       200

---------------------------
---------------------------
UCI CORPUS
---------------------------
---------------------------

Parameters for training data:
 60.0 % of positive documents are hidden in unlabelled set U.
 5.0 % of P is actually negative, to simulate noise.

P: 224 , U: 982


---------------------------
Training dummy classifier
---------------------------



---------------------------
Training one-class SVM
---------------------------

Building for evaluation
*
optimization finished, #iter = 0
obj = 6270.741649, rho = 111.977321
nSV = 112, nBSV = 112
[LibSVM]

---------------------------
Training cos-roc classifier
---------------------------

Computing ranking (cosine similarity to mean positive example)
Choosing Potential Negative examples with ranking threshold
Threshold given noise level: 0.121479699521
Unlabelled docs below threshold: 200 of 982 

Building Rocchio model
Classification Report:

[ 0.  1.  0.  1.  1.  1.  1.  1.  1.  1.] [ 1.  1.  0.  1.  1.  1.  0.  1.  0.  1.]
             precision    recall  f1-score   support

        0.0       0.92      0.25      0.39       982
        1.0       0.22      0.91      0.35       224

avg / total       0.79      0.37      0.38      1206



---------------------------
Training roc-SVM classifier
---------------------------

Determining RN using Cosine Similarity threshold and Rocchio

Building Rocchio model to determine Reliable Negative examples
Reliable Negative examples in U: 891 ( 90.73319755600815 %)

Iterating SVM with P, U-RN, and RN
Building initial SVM classifier with Positive and Reliable Negative docs
Predicting U with initial SVM, adding negatively classified docs to RN for iteration
Iterative SVM converged. Positive examples remaining in U: 91 ( 100.0 %)
Ratio of positive samples classified as negative by initial SVM: 0.0
Classification Report:

[1 1 1 1 1 1 1 1 1 1] [0 0 1 1 0 0 0 0 0 0]
             precision    recall  f1-score   support

        0.0       1.00      0.90      0.95       982
        1.0       0.69      1.00      0.82       224

avg / total       0.94      0.92      0.92      1206



---------------------------
Training CR_SVM classifier
---------------------------

Determining RN using Cosine Similarity threshold and Rocchio

Computing ranking (cosine similarity to mean positive example)
Choosing Potential Negative examples with ranking threshold
Threshold given noise level: 0.0957987230422
Unlabelled docs below threshold: 72 of 982 

Building Rocchio model to determine Reliable Negative examples
Reliable Negative examples in U: 83 ( 8.45213849287169 %)

Iterating SVM with P, U-RN, and RN
Building initial SVM classifier with Positive and Reliable Negative docs
Predicting U with initial SVM, adding negatively classified docs to RN for iteration
new negative docs: 9
Iteration # 1
new negative docs: 1
Iteration # 2
Iterative SVM converged. Positive examples remaining in U: 889 ( 98.88765294771969 %)
Ratio of positive samples classified as negative by initial SVM: 0.0580357142857
Ratio of positive samples classified as negative by final SVM: 0.0580357142857
Final classifier discards too many positive examples.
Returning initial classifier instead
Classification Report:

[0 1 0 1 1 0 1 1 1 1] [1 1 1 1 1 1 1 1 0 1]
             precision    recall  f1-score   support

        0.0       0.88      0.09      0.17       982
        1.0       0.19      0.94      0.32       224

avg / total       0.75      0.25      0.20      1206



---------------------------
Training I-EM classifier
---------------------------

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.4  0.6]
Computing attribute probabilities for 20818 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 32.0 / 336 ( 9.52380952381 %)

Iteration # 2
Building new model using probabilistic labels
Class distribution: [ 0.45589633  0.54410367]
Computing attribute probabilities for 20818 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 37.0 / 336 ( 11.0119047619 %)

Iteration # 3
Building new model using probabilistic labels
Class distribution: [ 0.46588422  0.53411578]
Computing attribute probabilities for 20818 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 41.0 / 336 ( 12.2023809524 %)

Iteration # 4
Building new model using probabilistic labels
Class distribution: [ 0.47317232  0.52682768]
Computing attribute probabilities for 20818 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 41.0 / 336 ( 12.2023809524 %)

Iteration # 5
Building new model using probabilistic labels
Class distribution: [ 0.47336781  0.52663219]
Computing attribute probabilities for 20818 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 41.0 / 336 ( 12.2023809524 %)

Returning final model after 5 iterations
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  1.]
             precision    recall  f1-score   support

        0.0       1.00      0.88      0.94       336
        1.0       0.85      1.00      0.92       224

avg / total       0.94      0.93      0.93       560



---------------------------
Training S-EM classifier
---------------------------

Determining confidence threshold using Spy Documents and rough I-EM

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.16749585  0.83250415]
Computing attribute probabilities for 36306 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 86.0 / 1004 ( 8.56573705179 %)

Iteration # 2
Building new model using probabilistic labels
Class distribution: [ 0.23766319  0.76233681]
Computing attribute probabilities for 36306 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 90.0 / 1004 ( 8.96414342629 %)

Iteration # 3
Building new model using probabilistic labels
Class distribution: [ 0.2427969  0.7572031]
Computing attribute probabilities for 36306 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 93.0 / 1004 ( 9.26294820717 %)

Iteration # 4
Building new model using probabilistic labels
Class distribution: [ 0.24508576  0.75491424]
Computing attribute probabilities for 36306 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 96.0 / 1004 ( 9.56175298805 %)

Iteration # 5
Building new model using probabilistic labels
Class distribution: [ 0.24735783  0.75264217]
Computing attribute probabilities for 36306 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 98.0 / 1004 ( 9.7609561753 %)

Iteration # 6
Building new model using probabilistic labels
Class distribution: [ 0.24881006  0.75118994]
Computing attribute probabilities for 36306 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 99.0 / 1004 ( 9.86055776892 %)

Iteration # 7
Building new model using probabilistic labels
Class distribution: [ 0.24952974  0.75047026]
Computing attribute probabilities for 36306 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 99.0 / 1004 ( 9.86055776892 %)

Returning final model after 7 iterations
Threshold given noise level: 1.21437276778e-30
Unlabelled docs below threshold: 23 of 982 


Iterating I-EM with P, U-RN, and RN

Building classifier from Positive and Reliable Negative set
Class distribution: [ 0.59649123  0.40350877]
Computing attribute probabilities for 3161 attributes

Calculating initial probabilistic labels for Reliable Negative and Unlabelled set

Iterating EM algorithm on P, RN and U

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.62547607  0.37452393]
Computing attribute probabilities for 36306 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 530.0 / 982 ( 53.9714867617 %)

Acceptable ratio of positively labelled sentences in U is reached.
Returning final model after 1 iterations
Classification Report:

[ 1.  1.  1.  0.  1.  1.  1.  1.  1.  1.] [ 1.  0.  0.  1.  1.  0.  0.  1.  0.  1.]
             precision    recall  f1-score   support

        0.0       0.96      0.46      0.62       982
        1.0       0.28      0.92      0.43       224

avg / total       0.84      0.55      0.59      1206



---------------------------
Training Biased-SVM
---------------------------

There are 88 parameter combinations to be evaluated.
NON-NORMALIZED WEIGHTS

(0, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 1})
(0.39915139626687463, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1})
(0.39915139626687463, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1})
(0.39915139626687463, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1})
(0.39915139626687463, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 1})
(0.39915139626687463, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.39915139626687463, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.39915139626687463, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.39915139626687463, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.39915139626687463, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.39915139626687463, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 10})
(0.21588451557093427, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 10})
(0.24568675509419452, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 10})
(0.24568675509419452, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 10})
(0.24568675509419452, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 10})
(0.24568675509419452, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 10})
(0.24568675509419452, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.24568675509419452, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.24568675509419452, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.24568675509419452, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.24568675509419452, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.24568675509419452, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.19269031141868512, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 100})
(0.24568675509419452, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 100})
(0.24568675509419452, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.24568675509419452, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.24568675509419452, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.24568675509419452, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 100})
(0.24568675509419452, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 100})
(0.24568675509419452, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 100})
(0.24568675509419452, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.24568675509419452, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.24568675509419452, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.17445213379469435, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 100})
(0.24121972318339099, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 100})
(0.24121972318339099, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 100})
(0.24121972318339099, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 100})
(0.24121972318339099, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 100})
(0.24121972318339099, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.24121972318339099, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.24121972318339099, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.24121972318339099, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.24121972318339099, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.24121972318339099, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.20649823228524147, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 1000})
(0.25032235424691518, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 1000})
(0.25032235424691518, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.25032235424691518, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.25032235424691518, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.25032235424691518, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 1000})
(0.25032235424691518, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 1000})
(0.25032235424691518, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 1000})
(0.25032235424691518, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.25032235424691518, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.25032235424691518, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.17065969610350534, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23691222812654472, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23691222812654472, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23691222812654472, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23691222812654472, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23691222812654472, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23691222812654472, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23691222812654472, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23691222812654472, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23691222812654472, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23691222812654472, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})

Best model has parameters {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1} and PU-score 0.399151396267
Building final classifier


-----------------------------------------------------------------------------
EVALUATION ON VALIDATION SET
-----------------------------------------------------------------------------

---------------------------
Dummy:
             precision    recall  f1-score   support

          0       0.65      0.99      0.78       177
          1       0.94      0.24      0.38       125

avg / total       0.77      0.68      0.62       302

---------------------------
One-Class SVM:
             precision    recall  f1-score   support

         -1       0.44      0.08      0.13       177
          1       0.40      0.86      0.54       125

avg / total       0.42      0.40      0.30       302

---------------------------
Cos-Roc:
             precision    recall  f1-score   support

          0       0.76      0.18      0.29       177
          1       0.44      0.92      0.60       125

avg / total       0.63      0.49      0.42       302

---------------------------
Roc-SVM:
             precision    recall  f1-score   support

          0       0.68      0.98      0.80       177
          1       0.93      0.34      0.50       125

avg / total       0.79      0.72      0.68       302

---------------------------
CR-SVM:
             precision    recall  f1-score   support

          0       0.92      0.06      0.12       177
          1       0.43      0.99      0.60       125

avg / total       0.71      0.45      0.32       302

---------------------------
I-EM:
             precision    recall  f1-score   support

          0       0.74      0.80      0.77       177
          1       0.68      0.60      0.64       125

avg / total       0.72      0.72      0.72       302

---------------------------
S-EM:
             precision    recall  f1-score   support

          0       0.82      0.46      0.59       177
          1       0.53      0.86      0.65       125

avg / total       0.70      0.62      0.61       302

---------------------------
Biased-SVM:
             precision    recall  f1-score   support

          0       0.70      0.97      0.81       177
          1       0.91      0.40      0.56       125

avg / total       0.78      0.74      0.71       302


Process finished with exit code 0
