/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/bin/python3.6 /Users/emperor/HU/BA/semisuper/semisuper/tests/test_corpi.py
---------------------------
---------------------------
SMS SPAM CORPUS
---------------------------
---------------------------

Parameters for training data:
 60.0 % of positive documents are hidden in unlabelled set U.
 5.0 % of P is actually negative, to simulate noise.

P: 1737 , U: 2720


---------------------------
Training dummy classifier
---------------------------



---------------------------
Training one-class SVM
---------------------------

Building for evaluation
*
optimization finished, #iter = 19
obj = 377128.008589, rho = 868.458336
nSV = 869, nBSV = 868
[LibSVM]

---------------------------
Training cos-roc classifier
---------------------------

Computing ranking (cosine similarity to mean positive example)
Choosing Potential Negative examples with ranking threshold
Threshold given noise level: 0.0730362821811
Unlabelled docs below threshold: 448 of 2720 

Building Rocchio model
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  0.]
             precision    recall  f1-score   support

        0.0       0.82      0.19      0.31      2720
        1.0       0.42      0.93      0.58      1737

avg / total       0.66      0.48      0.41      4457



---------------------------
Training roc-SVM classifier
---------------------------

Determining RN using Cosine Similarity threshold and Rocchio

Building Rocchio model to determine Reliable Negative examples
Reliable Negative examples in U: 2395 ( 88.05147058823529 %)

Iterating SVM with P, U-RN, and RN
Building initial SVM classifier with Positive and Reliable Negative docs
Predicting U with initial SVM, adding negatively classified docs to RN for iteration
new negative docs: 2
Iteration # 1
Iterative SVM converged. Positive examples remaining in U: 323 ( 99.38461538461539 %)
Ratio of positive samples classified as negative by initial SVM: 0.0633275762809
Ratio of positive samples classified as negative by final SVM: 0.0633275762809
Final classifier discards too many positive examples.
Returning initial classifier instead
Classification Report:

[1 1 1 1 1 1 1 1 1 1] [0 0 0 0 1 0 0 0 0 0]
             precision    recall  f1-score   support

        0.0       0.96      0.87      0.91      2720
        1.0       0.83      0.94      0.88      1737

avg / total       0.90      0.90      0.90      4457



---------------------------
Training CR_SVM classifier
---------------------------

Determining RN using Cosine Similarity threshold and Rocchio

Computing ranking (cosine similarity to mean positive example)
Choosing Potential Negative examples with ranking threshold
Threshold given noise level: 0.0436241065224
Unlabelled docs below threshold: 122 of 2720 

Building Rocchio model to determine Reliable Negative examples
Reliable Negative examples in U: 146 ( 5.367647058823529 %)

Iterating SVM with P, U-RN, and RN
Building initial SVM classifier with Positive and Reliable Negative docs
Predicting U with initial SVM, adding negatively classified docs to RN for iteration
new negative docs: 5
Iteration # 1
new negative docs: 2
Iteration # 2
new negative docs: 1
Iteration # 3
Iterative SVM converged. Positive examples remaining in U: 2566 ( 99.68919968919968 %)
Ratio of positive samples classified as negative by initial SVM: 0.0155440414508
Ratio of positive samples classified as negative by final SVM: 0.0149683362119
Returning final classifier
Classification Report:

[1 1 1 1 1 1 1 1 1 1] [1 1 1 1 1 1 1 1 1 0]
             precision    recall  f1-score   support

        0.0       0.86      0.06      0.11      2720
        1.0       0.40      0.99      0.57      1737

avg / total       0.68      0.42      0.29      4457



---------------------------
Training I-EM classifier
---------------------------

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.40004606  0.59995394]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 71.0 / 2605 ( 2.72552783109 %)

Iteration # 2
Building new model using probabilistic labels
Class distribution: [ 0.42213016  0.57786984]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 105.0 / 2605 ( 4.03071017274 %)

Iteration # 3
Building new model using probabilistic labels
Class distribution: [ 0.43017545  0.56982455]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 129.0 / 2605 ( 4.95201535509 %)

Iteration # 4
Building new model using probabilistic labels
Class distribution: [ 0.43520191  0.56479809]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 148.0 / 2605 ( 5.68138195777 %)

Iteration # 5
Building new model using probabilistic labels
Class distribution: [ 0.43965436  0.56034564]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 162.0 / 2605 ( 6.21880998081 %)

Iteration # 6
Building new model using probabilistic labels
Class distribution: [ 0.44315548  0.55684452]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 178.0 / 2605 ( 6.8330134357 %)

Iteration # 7
Building new model using probabilistic labels
Class distribution: [ 0.44654019  0.55345981]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 194.0 / 2605 ( 7.4472168906 %)

Iteration # 8
Building new model using probabilistic labels
Class distribution: [ 0.45047047  0.54952953]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 219.0 / 2605 ( 8.40690978887 %)

Iteration # 9
Building new model using probabilistic labels
Class distribution: [ 0.45467976  0.54532024]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 230.0 / 2605 ( 8.82917466411 %)

Iteration # 10
Building new model using probabilistic labels
Class distribution: [ 0.45696236  0.54303764]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 237.0 / 2605 ( 9.09788867562 %)

Iteration # 11
Building new model using probabilistic labels
Class distribution: [ 0.45833597  0.54166403]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 240.0 / 2605 ( 9.21305182342 %)

Iteration # 12
Building new model using probabilistic labels
Class distribution: [ 0.45927429  0.54072571]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 246.0 / 2605 ( 9.443378119 %)

Iteration # 13
Building new model using probabilistic labels
Class distribution: [ 0.46032903  0.53967097]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 250.0 / 2605 ( 9.59692898273 %)

Iteration # 14
Building new model using probabilistic labels
Class distribution: [ 0.46098544  0.53901456]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 253.0 / 2605 ( 9.71209213052 %)

Iteration # 15
Building new model using probabilistic labels
Class distribution: [ 0.46189152  0.53810848]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 254.0 / 2605 ( 9.75047984645 %)

Iteration # 16
Building new model using probabilistic labels
Class distribution: [ 0.46232584  0.53767416]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 261.0 / 2605 ( 10.019193858 %)

Iteration # 17
Building new model using probabilistic labels
Class distribution: [ 0.46290997  0.53709003]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 262.0 / 2605 ( 10.0575815739 %)

Iteration # 18
Building new model using probabilistic labels
Class distribution: [ 0.46340186  0.53659814]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 262.0 / 2605 ( 10.0575815739 %)

Iteration # 19
Building new model using probabilistic labels
Class distribution: [ 0.46361705  0.53638295]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 262.0 / 2605 ( 10.0575815739 %)

Iteration # 20
Building new model using probabilistic labels
Class distribution: [ 0.4637425  0.5362575]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 263.0 / 2605 ( 10.0959692898 %)

Iteration # 21
Building new model using probabilistic labels
Class distribution: [ 0.46391535  0.53608465]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 264.0 / 2605 ( 10.1343570058 %)

Iteration # 22
Building new model using probabilistic labels
Class distribution: [ 0.46404725  0.53595275]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 265.0 / 2605 ( 10.1727447217 %)

Iteration # 23
Building new model using probabilistic labels
Class distribution: [ 0.46418979  0.53581021]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 265.0 / 2605 ( 10.1727447217 %)

Iteration # 24
Building new model using probabilistic labels
Class distribution: [ 0.46431243  0.53568757]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 266.0 / 2605 ( 10.2111324376 %)

Iteration # 25
Building new model using probabilistic labels
Class distribution: [ 0.46440784  0.53559216]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 266.0 / 2605 ( 10.2111324376 %)

Iteration # 26
Building new model using probabilistic labels
Class distribution: [ 0.46452554  0.53547446]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 268.0 / 2605 ( 10.2879078695 %)

Iteration # 27
Building new model using probabilistic labels
Class distribution: [ 0.46463307  0.53536693]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 268.0 / 2605 ( 10.2879078695 %)

Iteration # 28
Building new model using probabilistic labels
Class distribution: [ 0.46474147  0.53525853]
Computing attribute probabilities for 89602 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 268.0 / 2605 ( 10.2879078695 %)

Returning final model after 28 iterations
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 1.  0.  0.  0.  0.  0.  1.  1.  0.  0.]
             precision    recall  f1-score   support

        0.0       0.97      0.90      0.93      2605
        1.0       0.86      0.96      0.91      1737

avg / total       0.93      0.92      0.92      4342



---------------------------
Training S-EM classifier
---------------------------

Determining confidence threshold using Spy Documents and rough I-EM

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.35090868  0.64909132]
Computing attribute probabilities for 91725 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 72.0 / 2893 ( 2.48876598686 %)

Iteration # 2
Building new model using probabilistic labels
Class distribution: [ 0.37263665  0.62736335]
Computing attribute probabilities for 91725 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 101.0 / 2893 ( 3.49118562046 %)

Iteration # 3
Building new model using probabilistic labels
Class distribution: [ 0.37938438  0.62061562]
Computing attribute probabilities for 91725 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 123.0 / 2893 ( 4.25164189423 %)

Iteration # 4
Building new model using probabilistic labels
Class distribution: [ 0.38450224  0.61549776]
Computing attribute probabilities for 91725 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 147.0 / 2893 ( 5.08123055652 %)

Iteration # 5
Building new model using probabilistic labels
Class distribution: [ 0.38900724  0.61099276]
Computing attribute probabilities for 91725 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 164.0 / 2893 ( 5.66885585897 %)

Iteration # 6
Building new model using probabilistic labels
Class distribution: [ 0.3920615  0.6079385]
Computing attribute probabilities for 91725 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 170.0 / 2893 ( 5.87625302454 %)

Iteration # 7
Building new model using probabilistic labels
Class distribution: [ 0.39452813  0.60547187]
Computing attribute probabilities for 91725 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 193.0 / 2893 ( 6.67127549257 %)

Iteration # 8
Building new model using probabilistic labels
Class distribution: [ 0.39810094  0.60189906]
Computing attribute probabilities for 91725 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 206.0 / 2893 ( 7.12063601797 %)

Iteration # 9
Building new model using probabilistic labels
Class distribution: [ 0.40112134  0.59887866]
Computing attribute probabilities for 91725 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 217.0 / 2893 ( 7.50086415486 %)

Iteration # 10
Building new model using probabilistic labels
Class distribution: [ 0.40279705  0.59720295]
Computing attribute probabilities for 91725 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 222.0 / 2893 ( 7.67369512617 %)

Iteration # 11
Building new model using probabilistic labels
Class distribution: [ 0.40406463  0.59593537]
Computing attribute probabilities for 91725 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 227.0 / 2893 ( 7.84652609748 %)

Returning final model after 11 iterations
Threshold given noise level: 5.60852954046e-21
Unlabelled docs below threshold: 143 of 2720 


Iterating I-EM with P, U-RN, and RN

Building classifier from Positive and Reliable Negative set
Class distribution: [ 0.59943978  0.40056022]
Computing attribute probabilities for 14323 attributes

Calculating initial probabilistic labels for Reliable Negative and Unlabelled set

Iterating EM algorithm on P, RN and U

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.79367798  0.20632202]
Computing attribute probabilities for 91725 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 1909.0 / 2720 ( 70.1838235294 %)

Acceptable ratio of positively labelled sentences in U is reached.
Returning final model after 1 iterations
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 0.  1.  0.  0.  1.  0.  0.  0.  1.  1.]
             precision    recall  f1-score   support

        0.0       0.93      0.30      0.45      2720
        1.0       0.47      0.96      0.63      1737

avg / total       0.75      0.56      0.52      4457



---------------------------
Training Biased-SVM
---------------------------

There are 88 parameter combinations to be evaluated.
NON-NORMALIZED WEIGHTS

(0, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 1})
(0.9703937269786832, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1})
(0.9703937269786832, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1})
(0.9703937269786832, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1})
(0.9703937269786832, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 1})
(0.9703937269786832, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.9703937269786832, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.9703937269786832, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.9703937269786832, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.9703937269786832, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.9703937269786832, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 10})
(0.29941341823247797, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 10})
(0.3501281440917639, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 10})
(0.3501281440917639, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 10})
(0.3501281440917639, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 10})
(0.3501281440917639, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 10})
(0.3501281440917639, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.3501281440917639, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.3501281440917639, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.3501281440917639, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.3501281440917639, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.3501281440917639, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.13468471019006095, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 100})
(0.44345016157096689, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 100})
(0.44345016157096689, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.44345016157096689, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.44345016157096689, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.44345016157096689, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 100})
(0.44345016157096689, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 100})
(0.44345016157096689, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 100})
(0.44345016157096689, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.44345016157096689, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.44345016157096689, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.29027042121572433, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 100})
(0.37091818850391423, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 100})
(0.37091818850391423, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 100})
(0.37091818850391423, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 100})
(0.37091818850391423, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 100})
(0.37091818850391423, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.37091818850391423, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.37091818850391423, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.37091818850391423, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.37091818850391423, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.37091818850391423, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.2892239563554565, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 1000})
(0.35472391075809917, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 1000})
(0.35472391075809917, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.35472391075809917, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.35472391075809917, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.35472391075809917, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 1000})
(0.35472391075809917, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 1000})
(0.35472391075809917, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 1000})
(0.35472391075809917, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.35472391075809917, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.35472391075809917, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.29874752279032901, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.37323600905366516, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.37323600905366516, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.37323600905366516, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.37323600905366516, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.37323600905366516, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.37323600905366516, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.37323600905366516, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.37323600905366516, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.37323600905366516, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.37323600905366516, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})

Best model has parameters {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1} and PU-score 0.970393726979
Building final classifier


-----------------------------------------------------------------------------
EVALUATION ON VALIDATION SET
-----------------------------------------------------------------------------

---------------------------
Dummy:
             precision    recall  f1-score   support

          0       0.15      0.77      0.25       150
          1       0.90      0.32      0.47       966

avg / total       0.80      0.38      0.44      1116

---------------------------
One-Class SVM:
             precision    recall  f1-score   support

         -1       0.29      0.37      0.32       150
          1       0.90      0.86      0.88       966

avg / total       0.82      0.79      0.80      1116

---------------------------
Cos-Roc:
             precision    recall  f1-score   support

          0       0.01      0.01      0.01       150
          1       0.85      0.88      0.87       966

avg / total       0.74      0.76      0.75      1116

---------------------------
Roc-SVM:
             precision    recall  f1-score   support

          0       0.19      0.81      0.31       150
          1       0.94      0.47      0.62       966

avg / total       0.84      0.51      0.58      1116

---------------------------
CR-SVM:
             precision    recall  f1-score   support

          0       0.00      0.00      0.00       150
          1       0.86      0.97      0.91       966

avg / total       0.75      0.84      0.79      1116

---------------------------
I-EM:
             precision    recall  f1-score   support

          0       0.12      0.63      0.21       150
          1       0.84      0.30      0.45       966

avg / total       0.74      0.35      0.41      1116

---------------------------
S-EM:
             precision    recall  f1-score   support

          0       0.71      0.49      0.58       150
          1       0.92      0.97      0.95       966

avg / total       0.90      0.91      0.90      1116

---------------------------
Biased-SVM:
             precision    recall  f1-score   support

          0       0.55      0.08      0.14       150
          1       0.87      0.99      0.93       966

avg / total       0.83      0.87      0.82      1116

---------------------------
---------------------------
AMAZON CORPUS
---------------------------
---------------------------

Parameters for training data:
 60.0 % of positive documents are hidden in unlabelled set U.
 5.0 % of P is actually negative, to simulate noise.

P: 179 , U: 619


---------------------------
Training dummy classifier
---------------------------



---------------------------
Training one-class SVM
---------------------------

Building for evaluation
*
optimization finished, #iter = 20
obj = 4002.806357, rho = 89.448516
nSV = 95, nBSV = 84
[LibSVM]

---------------------------
Training cos-roc classifier
---------------------------

Computing ranking (cosine similarity to mean positive example)
Choosing Potential Negative examples with ranking threshold
Threshold given noise level: 0.120720744182
Unlabelled docs below threshold: 205 of 619 

Building Rocchio model
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 0.  1.  1.  1.  1.  1.  1.  0.  1.  1.]
             precision    recall  f1-score   support

        0.0       0.98      0.39      0.56       619
        1.0       0.32      0.98      0.48       179

avg / total       0.83      0.52      0.54       798



---------------------------
Training roc-SVM classifier
---------------------------

Determining RN using Cosine Similarity threshold and Rocchio

Building Rocchio model to determine Reliable Negative examples
Reliable Negative examples in U: 574 ( 92.73021001615508 %)

Iterating SVM with P, U-RN, and RN
Building initial SVM classifier with Positive and Reliable Negative docs
Predicting U with initial SVM, adding negatively classified docs to RN for iteration
new negative docs: 2
Iteration # 1
Iterative SVM converged. Positive examples remaining in U: 43 ( 95.55555555555556 %)
Ratio of positive samples classified as negative by initial SVM: 0.00558659217877
Ratio of positive samples classified as negative by final SVM: 0.00558659217877
Returning final classifier
Classification Report:

[1 1 1 1 1 1 1 1 1 1] [0 0 0 0 0 0 0 0 0 0]
             precision    recall  f1-score   support

        0.0       1.00      0.93      0.96       619
        1.0       0.81      0.99      0.89       179

avg / total       0.96      0.94      0.95       798



---------------------------
Training CR_SVM classifier
---------------------------

Determining RN using Cosine Similarity threshold and Rocchio

Computing ranking (cosine similarity to mean positive example)
Choosing Potential Negative examples with ranking threshold
Threshold given noise level: 0.0824745471962
Unlabelled docs below threshold: 108 of 619 

Building Rocchio model to determine Reliable Negative examples
Reliable Negative examples in U: 146 ( 23.58642972536349 %)

Iterating SVM with P, U-RN, and RN
Building initial SVM classifier with Positive and Reliable Negative docs
Predicting U with initial SVM, adding negatively classified docs to RN for iteration
new negative docs: 23
Iteration # 1
new negative docs: 18
Iteration # 2
new negative docs: 12
Iteration # 3
new negative docs: 11
Iteration # 4
new negative docs: 11
Iteration # 5
new negative docs: 13
Iteration # 6
new negative docs: 11
Iteration # 7
new negative docs: 12
Iteration # 8
new negative docs: 12
Iteration # 9
new negative docs: 17
Iteration # 10
new negative docs: 10
Iteration # 11
new negative docs: 12
Iteration # 12
new negative docs: 13
Iteration # 13
new negative docs: 15
Iteration # 14
new negative docs: 12
Iteration # 15
new negative docs: 7
Iteration # 16
new negative docs: 7
Iteration # 17
new negative docs: 4
Iteration # 18
new negative docs: 2
Iteration # 19
new negative docs: 2
Iteration # 20
new negative docs: 1
Iteration # 21
new negative docs: 2
Iteration # 22
new negative docs: 1
Iteration # 23
Iterative SVM converged. Positive examples remaining in U: 245 ( 51.79704016913319 %)
Ratio of positive samples classified as negative by initial SVM: 0.00558659217877
Ratio of positive samples classified as negative by final SVM: 0.00558659217877
Returning final classifier
Classification Report:

[1 1 1 1 1 1 1 1 1 1] [0 0 1 0 1 1 1 0 0 0]
             precision    recall  f1-score   support

        0.0       1.00      0.60      0.75       619
        1.0       0.42      0.99      0.59       179

avg / total       0.87      0.69      0.72       798



---------------------------
Training I-EM classifier
---------------------------

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.40044743  0.59955257]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 6.0 / 268 ( 2.23880597015 %)

Iteration # 2
Building new model using probabilistic labels
Class distribution: [ 0.42444885  0.57555115]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 13.0 / 268 ( 4.85074626866 %)

Iteration # 3
Building new model using probabilistic labels
Class distribution: [ 0.43936542  0.56063458]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 19.0 / 268 ( 7.08955223881 %)

Iteration # 4
Building new model using probabilistic labels
Class distribution: [ 0.45044366  0.54955634]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 23.0 / 268 ( 8.58208955224 %)

Iteration # 5
Building new model using probabilistic labels
Class distribution: [ 0.45706937  0.54293063]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 26.0 / 268 ( 9.70149253731 %)

Iteration # 6
Building new model using probabilistic labels
Class distribution: [ 0.4624613  0.5375387]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 28.0 / 268 ( 10.447761194 %)

Iteration # 7
Building new model using probabilistic labels
Class distribution: [ 0.46733687  0.53266313]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 32.0 / 268 ( 11.9402985075 %)

Iteration # 8
Building new model using probabilistic labels
Class distribution: [ 0.47099141  0.52900859]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 33.0 / 268 ( 12.3134328358 %)

Iteration # 9
Building new model using probabilistic labels
Class distribution: [ 0.47413208  0.52586792]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 36.0 / 268 ( 13.4328358209 %)

Iteration # 10
Building new model using probabilistic labels
Class distribution: [ 0.47742591  0.52257409]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 37.0 / 268 ( 13.8059701493 %)

Iteration # 11
Building new model using probabilistic labels
Class distribution: [ 0.47980355  0.52019645]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 38.0 / 268 ( 14.1791044776 %)

Iteration # 12
Building new model using probabilistic labels
Class distribution: [ 0.48271977  0.51728023]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 39.0 / 268 ( 14.552238806 %)

Iteration # 13
Building new model using probabilistic labels
Class distribution: [ 0.4848797  0.5151203]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 39.0 / 268 ( 14.552238806 %)

Iteration # 14
Building new model using probabilistic labels
Class distribution: [ 0.48636776  0.51363224]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 40.0 / 268 ( 14.9253731343 %)

Iteration # 15
Building new model using probabilistic labels
Class distribution: [ 0.48719773  0.51280227]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 41.0 / 268 ( 15.2985074627 %)

Iteration # 16
Building new model using probabilistic labels
Class distribution: [ 0.4881663  0.5118337]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 41.0 / 268 ( 15.2985074627 %)

Iteration # 17
Building new model using probabilistic labels
Class distribution: [ 0.48920609  0.51079391]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 41.0 / 268 ( 15.2985074627 %)

Iteration # 18
Building new model using probabilistic labels
Class distribution: [ 0.4898877  0.5101123]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 41.0 / 268 ( 15.2985074627 %)

Iteration # 19
Building new model using probabilistic labels
Class distribution: [ 0.49013212  0.50986788]
Computing attribute probabilities for 7877 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 41.0 / 268 ( 15.2985074627 %)

Returning final model after 19 iterations
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 0.  0.  0.  0.  1.  0.  0.  0.  0.  0.]
             precision    recall  f1-score   support

        0.0       1.00      0.85      0.92       268
        1.0       0.81      1.00      0.90       179

avg / total       0.93      0.91      0.91       447



---------------------------
Training S-EM classifier
---------------------------

Determining confidence threshold using Spy Documents and rough I-EM

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.20300752  0.79699248]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 0.0 / 636 ( 0.0 %)

Returning final model after 1 iterations
Threshold given noise level: 6.89258905364e-13
Unlabelled docs below threshold: 17 of 619 


Iterating I-EM with P, U-RN, and RN

Building classifier from Positive and Reliable Negative set
Class distribution: [ 0.5952381  0.4047619]
Computing attribute probabilities for 1425 attributes

Calculating initial probabilistic labels for Reliable Negative and Unlabelled set

Iterating EM algorithm on P, RN and U

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.54134353  0.45865647]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 295.0 / 619 ( 47.6575121163 %)

Iteration # 2
Building new model using probabilistic labels
Class distribution: [ 0.57563032  0.42436968]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 299.0 / 619 ( 48.3037156704 %)

Iteration # 3
Building new model using probabilistic labels
Class distribution: [ 0.5902322  0.4097678]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 300.0 / 619 ( 48.465266559 %)

Iteration # 4
Building new model using probabilistic labels
Class distribution: [ 0.59458888  0.40541112]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 301.0 / 619 ( 48.6268174475 %)

Iteration # 5
Building new model using probabilistic labels
Class distribution: [ 0.59606894  0.40393106]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 302.0 / 619 ( 48.788368336 %)

Iteration # 6
Building new model using probabilistic labels
Class distribution: [ 0.5973149  0.4026851]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 302.0 / 619 ( 48.788368336 %)

Iteration # 7
Building new model using probabilistic labels
Class distribution: [ 0.59791821  0.40208179]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 303.0 / 619 ( 48.9499192246 %)

Iteration # 8
Building new model using probabilistic labels
Class distribution: [ 0.59818196  0.40181804]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 303.0 / 619 ( 48.9499192246 %)

Iteration # 9
Building new model using probabilistic labels
Class distribution: [ 0.59841102  0.40158898]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 303.0 / 619 ( 48.9499192246 %)

Iteration # 10
Building new model using probabilistic labels
Class distribution: [ 0.59871128  0.40128872]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 304.0 / 619 ( 49.1114701131 %)

Iteration # 11
Building new model using probabilistic labels
Class distribution: [ 0.59916768  0.40083232]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 304.0 / 619 ( 49.1114701131 %)

Iteration # 12
Building new model using probabilistic labels
Class distribution: [ 0.59962381  0.40037619]
Computing attribute probabilities for 12844 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 304.0 / 619 ( 49.1114701131 %)

Returning final model after 12 iterations
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 1.  0.  1.  0.  1.  1.  0.  0.  0.  0.]
             precision    recall  f1-score   support

        0.0       1.00      0.51      0.67       619
        1.0       0.37      0.99      0.54       179

avg / total       0.86      0.62      0.64       798



---------------------------
Training Biased-SVM
---------------------------

There are 88 parameter combinations to be evaluated.
NON-NORMALIZED WEIGHTS

(0, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 1})
(0.63157894736842113, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1})
(0.63157894736842113, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1})
(0.63157894736842113, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1})
(0.63157894736842113, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 1})
(0.63157894736842113, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.63157894736842113, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.63157894736842113, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.63157894736842113, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.63157894736842113, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.63157894736842113, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 10})
(0.3666292555181444, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 10})
(0.46822130772748055, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 10})
(0.46822130772748055, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 10})
(0.46822130772748055, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 10})
(0.46822130772748055, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 10})
(0.46822130772748055, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.46822130772748055, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.46822130772748055, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.46822130772748055, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.46822130772748055, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.46822130772748055, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.067340067340067339, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 100})
(0.44829699676035373, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 100})
(0.44829699676035373, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.44829699676035373, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.44829699676035373, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.44829699676035373, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 100})
(0.44829699676035373, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 100})
(0.44829699676035373, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 100})
(0.44829699676035373, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.44829699676035373, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.44829699676035373, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.47886270108492329, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 100})
(0.45804258364644834, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 100})
(0.45804258364644834, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 100})
(0.45804258364644834, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 100})
(0.45804258364644834, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 100})
(0.45804258364644834, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.45804258364644834, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.45804258364644834, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.45804258364644834, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.45804258364644834, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.45804258364644834, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.43066322136089585, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 1000})
(0.45804258364644834, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 1000})
(0.45804258364644834, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.45804258364644834, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.45804258364644834, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.45804258364644834, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 1000})
(0.45804258364644834, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 1000})
(0.45804258364644834, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 1000})
(0.45804258364644834, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.45804258364644834, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.45804258364644834, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.47886270108492329, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.45804258364644834, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.45804258364644834, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.45804258364644834, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.45804258364644834, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.45804258364644834, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.45804258364644834, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.45804258364644834, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.45804258364644834, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.45804258364644834, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.45804258364644834, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})

Best model has parameters {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1} and PU-score 0.631578947368
Building final classifier


-----------------------------------------------------------------------------
EVALUATION ON VALIDATION SET
-----------------------------------------------------------------------------

---------------------------
Dummy:
             precision    recall  f1-score   support

          0       0.55      0.92      0.69       100
          1       0.76      0.25      0.38       100

avg / total       0.65      0.58      0.53       200

---------------------------
One-Class SVM:
             precision    recall  f1-score   support

         -1       0.68      0.41      0.51       100
          1       0.58      0.81      0.67       100

avg / total       0.63      0.61      0.59       200

---------------------------
Cos-Roc:
             precision    recall  f1-score   support

          0       0.76      0.29      0.42       100
          1       0.56      0.91      0.69       100

avg / total       0.66      0.60      0.56       200

---------------------------
Roc-SVM:
             precision    recall  f1-score   support

          0       0.61      0.94      0.74       100
          1       0.87      0.40      0.55       100

avg / total       0.74      0.67      0.64       200

---------------------------
CR-SVM:
             precision    recall  f1-score   support

          0       0.69      0.73      0.71       100
          1       0.71      0.67      0.69       100

avg / total       0.70      0.70      0.70       200

---------------------------
I-EM:
             precision    recall  f1-score   support

          0       0.64      0.72      0.68       100
          1       0.68      0.59      0.63       100

avg / total       0.66      0.66      0.65       200

---------------------------
S-EM:
             precision    recall  f1-score   support

          0       0.72      0.59      0.65       100
          1       0.65      0.77      0.71       100

avg / total       0.69      0.68      0.68       200

---------------------------
Biased-SVM:
             precision    recall  f1-score   support

          0       0.70      0.73      0.71       100
          1       0.72      0.68      0.70       100

avg / total       0.71      0.70      0.70       200

---------------------------
---------------------------
UCI CORPUS
---------------------------
---------------------------

Parameters for training data:
 60.0 % of positive documents are hidden in unlabelled set U.
 5.0 % of P is actually negative, to simulate noise.

P: 224 , U: 982


---------------------------
Training dummy classifier
---------------------------



---------------------------
Training one-class SVM
---------------------------

Building for evaluation
*
optimization finished, #iter = 0
obj = 6270.706287, rho = 111.976838
nSV = 112, nBSV = 112
[LibSVM]

---------------------------
Training cos-roc classifier
---------------------------

Computing ranking (cosine similarity to mean positive example)
Choosing Potential Negative examples with ranking threshold
Threshold given noise level: 0.122860084193
Unlabelled docs below threshold: 203 of 982 

Building Rocchio model
Classification Report:

[ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 0.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
             precision    recall  f1-score   support

        0.0       0.97      0.24      0.39       982
        1.0       0.23      0.97      0.37       224

avg / total       0.83      0.38      0.39      1206



---------------------------
Training roc-SVM classifier
---------------------------

Determining RN using Cosine Similarity threshold and Rocchio

Building Rocchio model to determine Reliable Negative examples
Reliable Negative examples in U: 909 ( 92.56619144602851 %)

Iterating SVM with P, U-RN, and RN
Building initial SVM classifier with Positive and Reliable Negative docs
Predicting U with initial SVM, adding negatively classified docs to RN for iteration
Iterative SVM converged. Positive examples remaining in U: 73 ( 100.0 %)
Ratio of positive samples classified as negative by initial SVM: 0.0
Classification Report:

[1 1 1 1 1 1 1 1 1 1] [0 1 0 0 0 0 1 0 0 0]
             precision    recall  f1-score   support

        0.0       1.00      0.92      0.96       982
        1.0       0.74      1.00      0.85       224

avg / total       0.95      0.94      0.94      1206



---------------------------
Training CR_SVM classifier
---------------------------

Determining RN using Cosine Similarity threshold and Rocchio

Computing ranking (cosine similarity to mean positive example)
Choosing Potential Negative examples with ranking threshold
Threshold given noise level: 0.0917206691898
Unlabelled docs below threshold: 58 of 982 

Building Rocchio model to determine Reliable Negative examples
Reliable Negative examples in U: 72 ( 7.3319755600814664 %)

Iterating SVM with P, U-RN, and RN
Building initial SVM classifier with Positive and Reliable Negative docs
Predicting U with initial SVM, adding negatively classified docs to RN for iteration
new negative docs: 2
Iteration # 1
Iterative SVM converged. Positive examples remaining in U: 908 ( 99.78021978021978 %)
Ratio of positive samples classified as negative by initial SVM: 0.0401785714286
Ratio of positive samples classified as negative by final SVM: 0.0401785714286
Returning final classifier
Classification Report:

[1 1 1 1 0 1 1 1 1 1] [1 1 1 1 1 1 1 1 1 1]
             precision    recall  f1-score   support

        0.0       0.89      0.08      0.14       982
        1.0       0.19      0.96      0.32       224

avg / total       0.76      0.24      0.17      1206



---------------------------
Training I-EM classifier
---------------------------

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.4  0.6]
Computing attribute probabilities for 20737 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 19.0 / 336 ( 5.65476190476 %)

Iteration # 2
Building new model using probabilistic labels
Class distribution: [ 0.43551599  0.56448401]
Computing attribute probabilities for 20737 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 26.0 / 336 ( 7.7380952381 %)

Iteration # 3
Building new model using probabilistic labels
Class distribution: [ 0.44725158  0.55274842]
Computing attribute probabilities for 20737 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 27.0 / 336 ( 8.03571428571 %)

Iteration # 4
Building new model using probabilistic labels
Class distribution: [ 0.44891549  0.55108451]
Computing attribute probabilities for 20737 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 27.0 / 336 ( 8.03571428571 %)

Iteration # 5
Building new model using probabilistic labels
Class distribution: [ 0.4500307  0.5499693]
Computing attribute probabilities for 20737 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 30.0 / 336 ( 8.92857142857 %)

Iteration # 6
Building new model using probabilistic labels
Class distribution: [ 0.45350521  0.54649479]
Computing attribute probabilities for 20737 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 30.0 / 336 ( 8.92857142857 %)

Iteration # 7
Building new model using probabilistic labels
Class distribution: [ 0.45372745  0.54627255]
Computing attribute probabilities for 20737 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 30.0 / 336 ( 8.92857142857 %)

Returning final model after 7 iterations
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
             precision    recall  f1-score   support

        0.0       1.00      0.91      0.95       336
        1.0       0.88      1.00      0.94       224

avg / total       0.95      0.94      0.95       560



---------------------------
Training S-EM classifier
---------------------------

Determining confidence threshold using Spy Documents and rough I-EM

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.16749585  0.83250415]
Computing attribute probabilities for 36146 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 69.0 / 1004 ( 6.87250996016 %)

Iteration # 2
Building new model using probabilistic labels
Class distribution: [ 0.22423089  0.77576911]
Computing attribute probabilities for 36146 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 76.0 / 1004 ( 7.56972111554 %)

Iteration # 3
Building new model using probabilistic labels
Class distribution: [ 0.23010466  0.76989534]
Computing attribute probabilities for 36146 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 76.0 / 1004 ( 7.56972111554 %)

Returning final model after 3 iterations
Threshold given noise level: 1.11631347207e-11
Unlabelled docs below threshold: 527 of 982 


Iterating I-EM with P, U-RN, and RN

Building classifier from Positive and Reliable Negative set
Class distribution: [ 0.29826897  0.70173103]
Computing attribute probabilities for 26872 attributes

Calculating initial probabilistic labels for Reliable Negative and Unlabelled set

Iterating EM algorithm on P, RN and U

Iteration # 1
Building new model using probabilistic labels
Class distribution: [ 0.32029787  0.67970213]
Computing attribute probabilities for 36146 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 173.0 / 982 ( 17.617107943 %)

Iteration # 2
Building new model using probabilistic labels
Class distribution: [ 0.32924275  0.67075725]
Computing attribute probabilities for 36146 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 175.0 / 982 ( 17.8207739308 %)

Iteration # 3
Building new model using probabilistic labels
Class distribution: [ 0.33086116  0.66913884]
Computing attribute probabilities for 36146 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 175.0 / 982 ( 17.8207739308 %)

Iteration # 4
Building new model using probabilistic labels
Class distribution: [ 0.33095195  0.66904805]
Computing attribute probabilities for 36146 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 175.0 / 982 ( 17.8207739308 %)

Iteration # 5
Building new model using probabilistic labels
Class distribution: [ 0.33119697  0.66880303]
Computing attribute probabilities for 36146 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 176.0 / 982 ( 17.9226069246 %)

Iteration # 6
Building new model using probabilistic labels
Class distribution: [ 0.33168686  0.66831314]
Computing attribute probabilities for 36146 attributes
Predicting probabilities for U
Unlabelled instances classified as positive: 176.0 / 982 ( 17.9226069246 %)

Returning final model after 6 iterations
Classification Report:

[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.] [ 0.  1.  0.  0.  0.  0.  0.  0.  0.  0.]
             precision    recall  f1-score   support

        0.0       1.00      0.82      0.90       982
        1.0       0.56      1.00      0.72       224

avg / total       0.92      0.85      0.87      1206



---------------------------
Training Biased-SVM
---------------------------

There are 88 parameter combinations to be evaluated.
NON-NORMALIZED WEIGHTS

(0, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 1})
(0, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 1})
(0.43629807692307693, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1})
(0.43629807692307693, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1})
(0.43629807692307693, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1})
(0.43629807692307693, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 1})
(0.43629807692307693, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.43629807692307693, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.43629807692307693, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.43629807692307693, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.43629807692307693, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0.43629807692307693, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1})
(0, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 10})
(0, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 10})
(0.20934256055363321, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 10})
(0.2803695007414731, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 10})
(0.2803695007414731, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 10})
(0.2803695007414731, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 10})
(0.2803695007414731, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 10})
(0.2803695007414731, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.2803695007414731, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.2803695007414731, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.2803695007414731, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.2803695007414731, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.2803695007414731, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 10})
(0.32055579584775085, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 100})
(0.2803695007414731, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 100})
(0.2803695007414731, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.2803695007414731, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.2803695007414731, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 100})
(0.2803695007414731, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 100})
(0.2803695007414731, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 100})
(0.2803695007414731, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 100})
(0.2803695007414731, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.2803695007414731, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.2803695007414731, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 100})
(0.20934256055363321, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 100})
(0.23551038062283738, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 100})
(0.23551038062283738, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 100})
(0.23551038062283738, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 100})
(0.23551038062283738, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 100})
(0.23551038062283738, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.23551038062283738, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.23551038062283738, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.23551038062283738, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.23551038062283738, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.23551038062283738, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 100})
(0.20934256055363321, {'C_pos': 0.01, 'C_neg': 0.01, 'C': 1000})
(0.23551038062283738, {'C_pos': 2.0100000000000002, 'C_neg': 0.01, 'C': 1000})
(0.23551038062283738, {'C_pos': 4.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.23551038062283738, {'C_pos': 6.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.23551038062283738, {'C_pos': 8.0099999999999998, 'C_neg': 0.01, 'C': 1000})
(0.23551038062283738, {'C_pos': 10.01, 'C_neg': 0.01, 'C': 1000})
(0.23551038062283738, {'C_pos': 12.01, 'C_neg': 0.01, 'C': 1000})
(0.23551038062283738, {'C_pos': 14.01, 'C_neg': 0.01, 'C': 1000})
(0.23551038062283738, {'C_pos': 16.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.23551038062283738, {'C_pos': 18.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.23551038062283738, {'C_pos': 20.010000000000002, 'C_neg': 0.01, 'C': 1000})
(0.20934256055363321, {'C_pos': 0.33000000000000002, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23551038062283738, {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23551038062283738, {'C_pos': 132.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23551038062283738, {'C_pos': 198.33000000000001, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23551038062283738, {'C_pos': 264.32999999999998, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23551038062283738, {'C_pos': 330.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23551038062283738, {'C_pos': 396.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23551038062283738, {'C_pos': 462.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23551038062283738, {'C_pos': 528.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23551038062283738, {'C_pos': 594.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})
(0.23551038062283738, {'C_pos': 660.33000000000004, 'C_neg': 0.33000000000000002, 'C': 1000})

Best model has parameters {'C_pos': 66.329999999999998, 'C_neg': 0.33000000000000002, 'C': 1} and PU-score 0.436298076923
Building final classifier


-----------------------------------------------------------------------------
EVALUATION ON VALIDATION SET
-----------------------------------------------------------------------------

---------------------------
Dummy:
             precision    recall  f1-score   support

          0       0.65      0.92      0.76       177
          1       0.72      0.29      0.41       125

avg / total       0.68      0.66      0.62       302

---------------------------
One-Class SVM:
             precision    recall  f1-score   support

         -1       0.59      0.38      0.46       177
          1       0.41      0.62      0.50       125

avg / total       0.51      0.48      0.48       302

---------------------------
Cos-Roc:
             precision    recall  f1-score   support

          0       0.58      0.15      0.23       177
          1       0.41      0.85      0.55       125

avg / total       0.51      0.44      0.37       302

---------------------------
Roc-SVM:
             precision    recall  f1-score   support

          0       0.64      0.93      0.76       177
          1       0.73      0.26      0.38       125

avg / total       0.68      0.65      0.60       302

---------------------------
CR-SVM:
             precision    recall  f1-score   support

          0       0.40      0.02      0.04       177
          1       0.41      0.95      0.57       125

avg / total       0.40      0.41      0.26       302

---------------------------
I-EM:
             precision    recall  f1-score   support

          0       0.68      0.77      0.72       177
          1       0.60      0.49      0.54       125

avg / total       0.65      0.65      0.65       302

---------------------------
S-EM:
             precision    recall  f1-score   support

          0       0.68      0.89      0.77       177
          1       0.73      0.42      0.53       125

avg / total       0.70      0.70      0.67       302

---------------------------
Biased-SVM:
             precision    recall  f1-score   support

          0       0.65      0.92      0.76       177
          1       0.71      0.30      0.42       125

avg / total       0.67      0.66      0.62       302


Process finished with exit code 0
